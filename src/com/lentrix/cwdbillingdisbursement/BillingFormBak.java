/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lentrix.cwdbillingdisbursement;

import com.lentrix.cwdbillingdisbursement.models.Billing;
import com.lentrix.cwdbillingdisbursement.models.Customer;
import com.lentrix.cwdbillingdisbursement.models.User;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.TimeZone;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lentrix
 */
public class BillingFormBak extends javax.swing.JDialog {

    /**
     * Creates new form BillingForm
     */
    
    private User user;
    
    public BillingFormBak(java.awt.Frame parent, boolean modal, User user) {
        super(parent, modal);
        this.user = user;
        initComponents();
        Calendar cdl = Calendar.getInstance(TimeZone.getTimeZone(ZoneId.systemDefault()));
        yearField.setValue(cdl.get(Calendar.YEAR));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showBillingButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        yearField = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        monthField = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        zoneField = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        dateReadingField = new com.toedter.calendar.JDateChooser();
        progress = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Billing Entry Form");

        showBillingButton.setText("Show Billing");
        showBillingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBillingButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Year:");
        jPanel1.add(jLabel1);

        yearField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0000"))));
        yearField.setPreferredSize(new java.awt.Dimension(80, 24));
        jPanel1.add(yearField);

        jLabel2.setText("Month:");
        jPanel1.add(jLabel2);

        monthField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        jPanel1.add(monthField);

        jLabel3.setText("Zone:");
        jPanel1.add(jLabel3);

        zoneField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "  ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jPanel1.add(zoneField);

        jLabel4.setText("Date Reading:");
        jPanel1.add(jLabel4);

        dateReadingField.setDateFormatString("yyy-MM-dd");
        dateReadingField.setPreferredSize(new java.awt.Dimension(130, 24));
        jPanel1.add(dateReadingField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addComponent(showBillingButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showBillingButton)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(closeButton)
                    .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1004, 541));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void showBillingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBillingButtonActionPerformed
        try {
            
            int month = monthField.getSelectedIndex();
            int year = Integer.parseInt(yearField.getText());
            int zone = zoneField.getSelectedIndex();
            
            LinkedList customers = Customer.getAll(Base.getConnection(), "WHERE zone = " + zone);
            ListIterator iter = customers.listIterator();
            
            progress.setMinimum(0);
            progress.setMaximum(customers.size());
            
            final User usr = this.user;
            
            new Thread() {
                public void run() {
                    int count = 0;
                    try {
                        while(iter.hasNext()) {
                            Customer cust = (Customer)iter.next();
                            if(!Billing.exists(year, month, cust.getId())) {
                                Date date = Date.valueOf(LocalDate.now());
                                Date dateReading = new Date(dateReadingField.getDate().getTime());
                                //Billing billing = new Billing(
                                //        -1, cust, date,year,month,cust.getLastReading(),0,dateReading,0,0.0f,0.0f,0.0f
                                //);
                                //billing.save(usr);
                            }
                            
                            progress.setValue(++count);
                        }
                    }catch(Exception ex) {
                        Base.error(ex.getMessage(), progress);
                    }
                }
            }.start();
            
            renderBills(year, month, zone);
            
                    
        }catch(SQLException ex) {
            Base.error(ex.getMessage(), this);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_showBillingButtonActionPerformed

    private void renderBills(int year, int month, int zone) {
        try {
            ResultSet rs = Base.getConnection().createStatement().executeQuery(
                    "SELECT b.*, c.name, c.meterNumber FROM billing b "
                            + "JOIN customer c ON c.id=b.customerId "
                            + "WHERE year=" + year + " AND month=" + month + " AND c.zone=" + zone + " "
                            + "ORDER BY name ASC");
            rs.last();
            int rows = rs.getRow();
            
            Object[][] content = new Object[rows][9];
            String[] colHeading = {"ID","Customer", "Meter No.", "Previous", 
                "Present", "Consumed", "Rate", "Discount", "Amount"};
            
            rs.beforeFirst();
            int i = 0;
            while(rs.next()) {
                content[i][0] = rs.getInt("id");
                content[i][1] = rs.getString("name");
                content[i][2] = rs.getString("meterNumber");
                content[i][3] = rs.getInt("previous");
                content[i][4] = rs.getInt("reading");
                content[i][5] = rs.getInt("consumption");
                content[i][6] = rs.getFloat("rate");
                content[i][7] = rs.getFloat("discount");
                content[i][8] = rs.getFloat("amount");
                i++;
            }
            
            DefaultTableModel model = new DefaultTableModel(content, colHeading) {

                @Override
                public void setValueAt(Object aValue, int row, int column) {
                    System.out.println(column);
                    if(column==4) {
                        try{
                            int val = Integer.parseInt(aValue.toString());
                            int prev = Integer.parseInt(String.valueOf(jTable1.getValueAt(row, 3)));
                            int consumed = val-prev;
                            float disc = Float.parseFloat(String.valueOf(jTable1.getValueAt(row, 7)));
                            float rate = Base.computeRate(consumed);
                            float gross = Base.computeAmount(consumed);
                            float amount = gross - (gross*disc);
                            
                            super.setValueAt(consumed, row, 5);
                            super.setValueAt(rate, row, 6);
                            super.setValueAt(amount, row, 8);
                            
                        }catch(NumberFormatException ex) {
                            Base.error(ex.getMessage(), null);
                            ex.printStackTrace();
                            return;
                        }
                    }
                    super.setValueAt(aValue, row, column); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public boolean isCellEditable(int row, int column) {
                    return (column==4);
                }
                
            };
            
            jTable1.setModel(model);
        }catch(SQLException ex) {
            Base.error(ex.getMessage(), this);
            ex.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private com.toedter.calendar.JDateChooser dateReadingField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox monthField;
    private javax.swing.JProgressBar progress;
    private javax.swing.JButton showBillingButton;
    private javax.swing.JFormattedTextField yearField;
    private javax.swing.JComboBox zoneField;
    // End of variables declaration//GEN-END:variables
}
